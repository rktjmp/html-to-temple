import{t as e}from"./vendor.780cc7e6.js";!function(e=".",t="__import__"){try{self[t]=new Function("u","return import(u)")}catch(n){const o=new URL(e,location),a=e=>{URL.revokeObjectURL(e.src),e.remove()};self[t]=e=>new Promise(((n,r)=>{const s=new URL(e,o);if(self[t].moduleMap[s])return n(self[t].moduleMap[s]);const l=new Blob([`import * as m from '${s}';`,`${t}.moduleMap['${s}']=m;`],{type:"text/javascript"}),c=Object.assign(document.createElement("script"),{type:"module",src:URL.createObjectURL(l),onerror(){r(new Error(`Failed to import: ${e}`)),a(c)},onload(){n(self[t].moduleMap[s]),a(c)}});document.head.appendChild(c)})),self[t].moduleMap={}}}("/html-to-temple/assets/");const t=(n={__unknown:e=>({type:e.type,value:e.text})},e=>n[e]?n[e]:n.__unknown);var n;const o=(e,n)=>{const a=t(e.type)(e);switch(a.type){case"element":const t={type:"tag",name:"",attributes:[],children:[]};return e.children.map((e=>o(e,t))),n.children.push(t);case"end_tag":return;case"tag_name":return void(n.name=a.value);case"text":return void n.children.push({type:"text",text:a.value});case"attribute":const r={name:"",value:""};return e.children.map((e=>o(e,r))),n.attributes.push(r),n;case"attribute_name":return void(n.name=a.value);case"attribute_value":return void(n.value=a.value);default:return e.children.map((e=>o(e,n))),n}},a=e=>{const t=(e=>e.map((e=>[e.name.replaceAll("-","_"),": ",'"',e.value,'"'].join(""))))(e.attributes);e.name;let n=()=>"unset";return n=0==e.children.length?()=>[]:()=>["do",e.children.map(a),"end"],[e.name,t.join(" "),n()]},r=(e,t="",n=[])=>{const o=[e[0],e[1]];return""!=t&&(o.reverse().push(t),o.reverse()),e[2].length>0?(o.push([t,e[2][0]].join("")),n.push(o.join(" ")),e[2][1].map((e=>{r(e,t+"  ").map((e=>n.push(e)))})),n.push([t,e[2][2]].join(""))):n.push(o.join(" ")),n};window.translate=function(t,n){e.init().then((async()=>{const s=t.value;console.log(s);const l=new e,c=await e.Language.load("tree-sitter-html.wasm");l.setLanguage(c);const u=s,i=l.parse(u);console.log(i.rootNode.toString());const m=o(i.rootNode,{name:"__root__",children:[]});console.log(m.children);const p=m.children.map(a);console.log(p);const d=r(p[0],"");console.log(d),console.log(d.join("\n")),n.value=d.join("\n")}))};
